services:
    # Сервис PHP (Laravel + PHP-FPM)
    php:
        build:
            context: ./
            dockerfile: php-fpm/Dockerfile
        container_name: group7024-php
        working_dir: /var/www/html
        volumes:
            - ./:/var/www/html            # Монтируем весь проект в контейнер
        depends_on:
            - postgres                   # Сначала должна стартовать БД
            - redis
        networks:
            - group7024

    # Сервис базы данных PostgreSQL
    postgres:
        image: postgres:15-alpine
        container_name: group7024-db
        environment:
            POSTGRES_DB: group7024     # Имя базы данных
            POSTGRES_USER: developer        # Пользователь базы данных
            POSTGRES_PASSWORD: "icC4TaG+dV;X"   # Пароль базы данных
        volumes:
            - postgres-data:/var/lib/postgresql/data
        ports:
            - "5432:5432"                # Экспортируем порт PostgreSQL
        networks:
            - group7024

    # Сервис Node.js (Vite dev server для фронтенда)
    node:
        build:
            context: .
            dockerfile: ssr/Dockerfile
        image: group7024/node-ssr:latest
        container_name: group7024-node
        working_dir: /app
        volumes:
            - ./:/app                    # Монтируем исходники для сборки фронтенда
            - node_modules:/app/node_modules          # Отдельный том для node_modules (чтобы кешировать зависимости)
        ports:
            - "5173:5173"                # Экспортируем порт dev-сервера Vite
        command: sh -c "npm install && npm run dev -- --host"
#        command: [ "pm2-runtime", "ecosystem.config.cjs" ]
        # Для production command: [ "pm2-runtime", "ecosystem.config.cjs" ]
        # ^ При старте контейнера устанавливаем зависимости и запускаем Vite dev server с флагом --host (слушать на 0.0.0.0)
        depends_on:
            - php                       # Laravel (бэкенд) должен быть запущен
        networks:
            - group7024

    # Сервис веб-сервера Nginx
    nginx:
        image: nginx:1.21-alpine
        container_name: group7024-nginx
        ports:
            - "8080:80"                    # Веб-приложение будет доступно на порту 8080
        volumes:
            - ./:/var/www/html           # Монтируем проект (для доступа к public/)
            - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro   # Подключаем конфиг Nginx
        depends_on:
            - php                           # Nginx запускается после PHP-FPM
            - postgres                      # и после фронтенд-сервера (для dev-режима)
            - node
        networks:
            - group7024

    # База данных для хранения кеша и очередей в оперативной памяти
    redis:
        image: redis:latest
        container_name: group7024-redis
        ports:
            - "6379:6379"
        volumes:
            - redis-data:/data
        networks:
            - group7024

# Объявляем Named Volume для данных БД, чтобы они сохранялись между перезапусками
volumes:
    node_modules:
    postgres-data:
    redis-data:

networks:
    group7024:
        driver: bridge
